<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables
drag = 0.8;
moveSpeed = 1;
playerRadius = 16;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn Camera
instance_create(x,y,obCamera);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// cooldown
weaponCooldown = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement
hChange = keyboard_check(ord("D")) - keyboard_check(ord("A")) * moveSpeed;
vChange = keyboard_check(ord("S")) - keyboard_check(ord("W")) * moveSpeed;
if sign(abs(hChange)) &amp;&amp; sign(abs(vChange)) {
    hChange *= 0.7;
    vChange *= 0.7;
}
hspeed += hChange;
vspeed += vChange;

speed *= drag;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collision
// Stay in room
if x + hspeed + playerRadius &gt; room_width {
    hspeed = 0;
    x = room_width - playerRadius;
} else if x + hspeed - playerRadius &lt; 0 {
    hspeed = 0;
    x = playerRadius;
}
if y + vspeed + playerRadius &gt; room_height {
    vspeed = 0;
    y = room_height - playerRadius;
} else if y + vspeed - playerRadius &lt; 0 {
    vspeed = 0;
    y = playerRadius;
}
// Wall collision
if place_meeting(x + hspeed,y,obWall) {
    while !place_meeting(x + sign(hspeed),y,obWall) &amp;&amp; x &gt; 0 &amp;&amp; x &lt; room_width{
        x += sign(hspeed);
    }
    hspeed = 0;
}
if place_meeting(x,y + vspeed,obWall) {
    while !place_meeting(x,y + sign(vspeed),obWall) &amp;&amp; y &gt; 0 &amp;&amp; y &lt; room_height {
        y += sign(vspeed);
    }
    vspeed = 0;
}
if place_meeting(x + hspeed,y + vspeed,obWall) {
    vspeed = 0;
    hspeed = 0;
} else if place_meeting(x + hspeed,y + vspeed,obWall) {
    vspeed = 0;
    hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cooldowns
weaponCooldown += 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Test
global.lightOffsetX = lengthdir_x(16,point_direction(x,y,mouse_x,mouse_y) + 180);
global.lightOffsetY = lengthdir_y(16,point_direction(x,y,mouse_x,mouse_y) + 180);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if weaponCooldown &gt; 5 {
    /// Boolet
    scanDir = point_direction(x,y,mouse_x,mouse_y) + random_range(-5,5);
    scanX = x;
    scanY = y;
    changeX = lengthdir_x(4,scanDir);
    changeY = lengthdir_y(4,scanDir);
    
    velocity = 200;
    
    while velocity {
        scanX += changeX;
        scanY += changeY;
        velocity -= 1;
        for (i = 0; i &lt; 1; i += 0.25) {
            part_particles_create(obPart.part,scanX + i * changeX,scanY+ i * changeY,obPart.bullet,1);
        }
        if position_meeting(scanX + changeX,scanY,obWall) {
            if abs(changeX) &lt; 1.5
                changeX *= -1;
            velocity -= 100;
        }
        if position_meeting(scanX,scanY + changeY,obWall) {
            if abs(changeY) &lt; 1.5
                changeY *= -1;
            velocity -= 100
        }
    }
    
    weaponCooldown = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
surface_set_target(obShadowSurf.surf);
draw_primitive_begin(pr_trianglefan)
draw_vertex(playerX,playerY);
draw_vertex(playerX+ lengthdir_x(768,lightDir - 30),playerY+ lengthdir_y(768,lightDir - 30))
draw_vertex(playerX+ lengthdir_x(768,lightDir - 90),playerY+ lengthdir_y(768,lightDir - 90))
draw_vertex(playerX+ lengthdir_x(768,lightDir + 180),playerY+ lengthdir_y(768,lightDir + 180))
draw_vertex(playerX+ lengthdir_x(768,lightDir + 90),playerY+ lengthdir_y(768,lightDir + 90))
draw_vertex(playerX+ lengthdir_x(768,lightDir + 30),playerY+ lengthdir_y(768,lightDir + 30))
draw_primitive_end();
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draws flashlight border
draw_self();
playerX = x + global.lightOffsetX;
playerY = y + global.lightOffsetY;
lightDir = point_direction(x,y,mouse_x,mouse_y);

surface_set_target(obShadowSurf.surf);
draw_set_color(c_dkgray);
draw_primitive_begin(pr_trianglefan)
draw_vertex(playerX,playerY);
draw_vertex(playerX+ lengthdir_x(768,lightDir - 25),playerY+ lengthdir_y(768,lightDir - 25))
draw_vertex(playerX+ lengthdir_x(768,lightDir - 90),playerY+ lengthdir_y(768,lightDir - 90))
draw_vertex(playerX+ lengthdir_x(768,lightDir + 180),playerY+ lengthdir_y(768,lightDir + 180))
draw_vertex(playerX+ lengthdir_x(768,lightDir + 90),playerY+ lengthdir_y(768,lightDir + 90))
draw_vertex(playerX+ lengthdir_x(768,lightDir + 25),playerY+ lengthdir_y(768,lightDir + 25))
draw_primitive_end();
draw_set_color(c_white);
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
